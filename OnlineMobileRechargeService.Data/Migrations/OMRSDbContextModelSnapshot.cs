// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineMobileRechargeService.Data.EF;

namespace OnlineMobileRechargeService.Data.Migrations
{
    [DbContext(typeof(OMRSDbContext))]
    partial class OMRSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.AppConfig", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("AppConfigs");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.CallerTune", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Audio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Singer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CallerTunes");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.ContactUs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactUs");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.CustomerCareNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CustomerCareNumbers");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.DNDCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Active");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DNDCategories");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.DNDMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Active");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DNDModes");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.DNDTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DNDCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("DNDModeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DNDCategoryId");

                    b.HasIndex("DNDModeId");

                    b.HasIndex("UserId");

                    b.ToTable("DNDTransactions");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.FeedBack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FeedBacks");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.ModeInCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ModeId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "ModeId");

                    b.HasIndex("ModeId");

                    b.ToTable("ModeInCategories");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OperatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperatorId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.Operator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Operators");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.PBPTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CreatedDate")
                        .HasColumnType("int");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PBPTransactions");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Description")
                        .HasColumnType("int");

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.Property<int>("OperatorId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("VASId")
                        .HasColumnType("int");

                    b.Property<string>("Validate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OperatorId");

                    b.HasIndex("VASId");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.SimType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SimTypes");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperatorId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("SimtypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VASId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperatorId");

                    b.HasIndex("UserId");

                    b.HasIndex("VASId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.UserInPlan", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "PlanId");

                    b.HasIndex("PlanId");

                    b.ToTable("UserInPlans");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.VAS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OperatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VAS");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.VASInOperator", b =>
                {
                    b.Property<int>("VASId")
                        .HasColumnType("int");

                    b.Property<int>("OperatorId")
                        .HasColumnType("int");

                    b.HasKey("VASId", "OperatorId");

                    b.ToTable("VASInOperators");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.DNDTransaction", b =>
                {
                    b.HasOne("OnlineMobileRechargeService.Data.Entities.DNDCategory", "DNDCategory")
                        .WithMany("DNDTransactions")
                        .HasForeignKey("DNDCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineMobileRechargeService.Data.Entities.DNDMode", "DNDMode")
                        .WithMany("DNDTransactions")
                        .HasForeignKey("DNDModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineMobileRechargeService.Data.Entities.AppUser", "AppUser")
                        .WithMany("DNDTransactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("DNDCategory");

                    b.Navigation("DNDMode");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.ModeInCategory", b =>
                {
                    b.HasOne("OnlineMobileRechargeService.Data.Entities.DNDCategory", "DNDCategory")
                        .WithMany("ModeInCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineMobileRechargeService.Data.Entities.DNDMode", "DNDMode")
                        .WithMany("ModeInCategories")
                        .HasForeignKey("ModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DNDCategory");

                    b.Navigation("DNDMode");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.Offer", b =>
                {
                    b.HasOne("OnlineMobileRechargeService.Data.Entities.Operator", "Operator")
                        .WithMany("Offers")
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operator");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.Plan", b =>
                {
                    b.HasOne("OnlineMobileRechargeService.Data.Entities.Operator", "Operator")
                        .WithMany("Plans")
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineMobileRechargeService.Data.Entities.VAS", "VAS")
                        .WithMany("Plans")
                        .HasForeignKey("VASId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operator");

                    b.Navigation("VAS");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.Transaction", b =>
                {
                    b.HasOne("OnlineMobileRechargeService.Data.Entities.Operator", "Operator")
                        .WithMany("Transactions")
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineMobileRechargeService.Data.Entities.AppUser", "AppUser")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineMobileRechargeService.Data.Entities.VAS", "VAS")
                        .WithMany("Transactions")
                        .HasForeignKey("VASId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Operator");

                    b.Navigation("VAS");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.UserInPlan", b =>
                {
                    b.HasOne("OnlineMobileRechargeService.Data.Entities.Plan", "Plan")
                        .WithMany("UserInPlans")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineMobileRechargeService.Data.Entities.AppUser", "AppUser")
                        .WithMany("UserInPlans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.VASInOperator", b =>
                {
                    b.HasOne("OnlineMobileRechargeService.Data.Entities.Operator", "Operator")
                        .WithMany("VASInOperators")
                        .HasForeignKey("VASId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineMobileRechargeService.Data.Entities.VAS", "VAS")
                        .WithMany("VASInOperators")
                        .HasForeignKey("VASId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operator");

                    b.Navigation("VAS");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.AppUser", b =>
                {
                    b.Navigation("DNDTransactions");

                    b.Navigation("Transactions");

                    b.Navigation("UserInPlans");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.DNDCategory", b =>
                {
                    b.Navigation("DNDTransactions");

                    b.Navigation("ModeInCategories");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.DNDMode", b =>
                {
                    b.Navigation("DNDTransactions");

                    b.Navigation("ModeInCategories");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.Operator", b =>
                {
                    b.Navigation("Offers");

                    b.Navigation("Plans");

                    b.Navigation("Transactions");

                    b.Navigation("VASInOperators");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.Plan", b =>
                {
                    b.Navigation("UserInPlans");
                });

            modelBuilder.Entity("OnlineMobileRechargeService.Data.Entities.VAS", b =>
                {
                    b.Navigation("Plans");

                    b.Navigation("Transactions");

                    b.Navigation("VASInOperators");
                });
#pragma warning restore 612, 618
        }
    }
}
